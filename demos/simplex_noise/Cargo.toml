[package]
name = "simplex_noise"
description = ""
version = "0.1.0"
edition = "2021"
authors = ["Austin Theriot"]
license = "MIT OR Apache-2.0"

[lib]
crate-type = ["cdylib", "rlib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true
# less code to include into binary
panic = 'abort'
# optimization over all codebase ( better optimization, slower build )
codegen-units = 1


[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
cpal = { version = "0.13.5", features = ["wasm-bindgen"] }
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2.78"
wasm-bindgen-futures = "0.4.31"
js-sys = "0.3.55"
wrend = { path = '../../wrend' }
ui = { path = '../ui' }
anyhow = "1.0.58"
thiserror = "1.0.31"
rand = { version = "0.8.4" }
# This dependency is not directly used, but enabling "js"
# Tells `getrandom` that `rand` should with wasm/js features enabled
getrandom = { version = "0.2.6", features = ["js"] }
# These two crates enable the info!() logging macro, etc.
log = "0.4"
wasm-logger = "0.2.0"
lazy_static = "1.4.0"
yew = { version = "0.19" }
yew-router = "0.16.0"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4.4", optional = true }


# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.4"
features = [
  "console",
  'Document',
  'Element',
  "HtmlDivElement",
  "Touch",
  "TouchEvent",
  "TouchList",
  "DomRect",
  "DomRectReadOnly",
  "HtmlSelectElement",
  "KeyboardEvent",
  "Blob",
  "BlobPropertyBag",
  "Url",
  "HtmlAnchorElement",
  "CssStyleDeclaration",
  "HtmlElement",
  "Node",
  "HtmlCanvasElement",
  "CanvasRenderingContext2d",
  "File",
  "FileList",
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"
